# Trigger when commits are pushed to the master branch

name: Bump version
on:
  pull_request:
    types:
      - closed
    branches:
      - master


jobs:
  hubapp-release:
    name: Release
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3
      with:
        ref: ${{ github.sha }} # required for better experience using pre-releases
        fetch-depth: '0'

    - name: Checkout go
      uses: actions/setup-go@v4
      with:
        go-version: '1.16' # The Go version to download (if necessary) and use.

    - name: Go version
      id: Version
      run: go version

    - name: Go download
      run: go mod download

    - name: Go test
      run: go test -v ./...
      continue-on-error: true

    - name: Go build
      run: mkdir -p build && go build -v -o build/hubapp && build/hubapp --help

    - name: Bump version and push tag
      uses: anothrNick/github-tag-action@1.67.0
      id: tagging #test4
      env:
        GITHUB_TOKEN: ${{ secrets.GORELEASER_GITHUB_TOKEN }}
        WITH_V: false
        INITIAL_VERSION: 1.0.0
        RELEASE_BRANCHES: master
        DEFAULT_BUMP: patch
        PRERELEASE: false
        DRY_RUN: false
        VERBOSE: true

  # release:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-go@v3
  #       with:
  #         go-version: 1.16
  #     - uses: go-semantic-release/action@v1
  #       with:
  #         hooks: goreleaser
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


    - name: Install GoReleaser
      uses: goreleaser/goreleaser-action@v5
      with:
        version: latest
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE_VERSION: ${{ steps.tagging.outputs.tag }}
        CLIENT_ID: ${{ secrets.CLIENT_ID }}
        CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}

    - name: Install Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mkdocs-material

    - name: Build page   
      run: cd www && mkdocs gh-deploy --force
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}


